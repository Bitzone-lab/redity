import { useEffect } from 'react'
import { useForceRender } from '../hooks/useForceRenders'
import { Hook, Connection, Encapsulation } from '../store'
import { __keyNameIndex__ } from '../utils/tools'

export default function createUseRender(registers: Map<string, Hook | Connection | Encapsulation>) {
    /**
     * Hook where the render will be generated by its keyName
     * @param keyName keyName to identify by render
     * @param index its additional
     */
    function useRender(keyName: string, index?: number | string): void {
        const [, forceRender] = useForceRender()

        function setRegister() {
            const hook: Hook = {
                keyName,
                index,
                render: forceRender
            }
            registers.set(__keyNameIndex__(keyName, index), hook)
        }

        function deleteRegister() {
            registers.delete(__keyNameIndex__(keyName, index))
        }

        useEffect(() => {
            setRegister()
            return () => {
                deleteRegister()
            }
        }, [])

        setRegister()
    }

    return useRender
}
